项目规划：
游戏描述：
在游戏中，玩家控制一艘最初出现在屏幕底部中央的飞船。
玩家可以使用箭头键左右移动飞船，还可以使用空格键进行射击。
游戏开始时，一群外星人出现在天空中，他们在屏幕中向下移动。
玩家的任务是射杀这些外星人。
玩家将所有的外星人都消灭完后，将出现一群新的外星人，他们的移动速度更快。
只要有外星人撞到了玩家的飞船或者到达了屏幕底部，玩家就损失一艘飞船。
玩家损失三艘飞船后，游戏结束。


开发阶段一：创建一艘可以左右移动的飞船，并且在用户按空格键时可以进行射击。
阶段二：添加外星人。首先在屏幕边缘添加一个外星人，然后生成一群外星人，并向两边和下面移动，删除被子弹击中的外星人。
显示玩家拥有的飞船数量，在飞船用完之后结束游戏。
阶段三：添加play按钮，玩家点击时，开始游戏。
阶段四：提高等级，每消灭完一次外星人后，外星人的速度增加，难度等级增加。
阶段五：实现记分系统，显示最高得分，当前等级，余下的飞船数。


计算：
1、创建一群外星人时需要确定一行可容纳多少外星人，需计算水平空间，可放置外星人的区域为屏幕水平宽度减去两边的边距（外星人的宽度的两倍）；
外星人之间也需要有间距，为一个外星人的宽度；
2、创建多行外星人时，需要计算垂直空间，将屏幕高度-第一行外星人的上边距（外星人高度）-飞船的高度-（最初外星人高度+外星人间距）（即外星人高度的两倍）。


外星人移动方式：先向右移动，碰到屏幕后向下移动一定的距离再向相反的方向移动。
有外星人撞到飞船时，飞船数量需减一，需要删除余下所有的外星人和子弹，让飞船重新居中，并创建一群新的外星人。
每消灭一个外星人，都可以增加得分。
每消灭完一波外星人之后，等级增加，消灭外星人的得分增加。
记录玩家的最高得分,显示余下的飞船数。


游戏中，碰撞是指两个元素重叠在一起，可用sprite.groupcollide()来检测两个编组的成员之间的碰撞
sprite.spritecollideany()，检测编组是否有成员与精灵发生了碰撞，并在找到与精灵发生碰撞的成员后就停止遍历组。














